generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  email           String   @unique
  hashed_password String
  phone           String?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  addresses UserAddress[]
  orders    Order[]

  @@map("users")
}

model UserAddress {
  id             Int      @id @default(autoincrement())
  user_id        Int
  recipient_name String
  postal_code    String
  address_1      String
  address_2      String?
  phone          String
  is_default     Boolean  @default(false) // 既定フラグ
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  user   User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  orders Order[]

  @@map("user_addresses")
}

enum OrderStatus {
  pending
  paid
  cancelled
}

enum FulfillStatus {
  unfulfilled
  fulfilled
}

model Order {
  id               Int     @id @default(autoincrement())
  user_id          Int?
  address_id       Int?
  // Shopifyと冪等化のキー
  shopify_order_id String? @unique
  order_number     Int?

  email String?

  currency String @default("JPY")

  total_price    Int
  status         OrderStatus   @default(pending)
  fulfill_status FulfillStatus @default(unfulfilled)

  ordered_at   DateTime  @default(now())
  cancelled_at DateTime?
  fulfilled_at DateTime?

  shipping_name        String?
  shipping_phone       String?
  shipping_postal_code String?
  shipping_address_1   String?
  shipping_address_2   String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User?        @relation(fields: [user_id], references: [id], onDelete: SetNull)
  address UserAddress? @relation(fields: [address_id], references: [id], onDelete: SetNull)
  items   OrderItem[]

  @@index([email])
  @@map("orders")
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order_id   Int
  product_id String
  title      String
  quantity   Int
  price      Int
  image_url  String?

  order Order @relation(fields: [order_id], references: [id], onDelete: Cascade)

  @@map("order_items")
}

model WebhookLog {
  id         Int      @id @default(autoincrement())
  topic      String
  payload    Json
  verified   Boolean
  created_at DateTime @default(now())

  @@map("webhook_logs")
}
